apiVersion: apps/v1
kind: Deployment
metadata:
  name: development-agent
  labels:
    app: development-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: development-agent
  template:
    metadata:
      labels:
        app: development-agent
    spec:
      serviceAccountName: orchestrai-sa
      containers:
        - name: development-agent
          image: ${IMAGE}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"          
          env:
            - name: AGENT_NAME
              value: "${AGENT_NAME}"
            - name: GRA_PUBLIC_URL
              value: "${GRA_PUBLIC_URL}"
            - name: KUBERNETES_NAMESPACE
              value: "${KUBERNETES_NAMESPACE}"
            - name: PUBLIC_URL
              value: "http://dev-agent.internal.orchestrai.ai:80"
            - name: INTERNAL_URL
              value: "http://dev-agent.internal.orchestrai.ai:80"
            - name: ENV_MANAGER_URL
              value: "http://env-manager.internal.orchestrai.ai:80"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/secrets/sa-key.json"
            - name: GCP_PROJECT_ID
              value: "${PROJECT_ID}"
            - name: GCP_REGION
              value: "${GCP_REGION}"
          volumeMounts:
            - name: service-account-volume
              mountPath: /secrets
              readOnly: true
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10             
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20            
      volumes:
        - name: service-account-volume
          secret:
            secretName: gcp-sa-key

---
apiVersion: v1
kind: Service
metadata:
  name: development-agent
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: development-agent
  ports:
    - name: http
      port: 8080
      targetPort: 8080